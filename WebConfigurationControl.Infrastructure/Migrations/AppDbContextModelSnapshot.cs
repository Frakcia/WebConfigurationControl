// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebConfigurationControl.Infrastructure.Contexts;

#nullable disable

namespace WebConfigurationControl.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("WebConfigurationControl.Domain.Entities.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c931d0cb-f1c5-48b4-9d23-0c806b970980"),
                            IsDisabled = false,
                            Name = "Add systemConfig",
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("bf9e94e8-81e3-48a7-8859-bec574c6d7de"),
                            IsDisabled = false,
                            Name = "Change systemConfig",
                            Type = 2
                        });
                });

            modelBuilder.Entity("WebConfigurationControl.Domain.Entities.EventNotification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EventNotifications");
                });

            modelBuilder.Entity("WebConfigurationControl.Domain.Entities.EventSubscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EventId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("UserId");

                    b.ToTable("EventSubscriptions");
                });

            modelBuilder.Entity("WebConfigurationControl.Domain.Entities.SystemConfiguration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Key")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Settings")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SystemConfigurations");
                });

            modelBuilder.Entity("WebConfigurationControl.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8ca40b6e-d767-452f-b71d-59627946b7ae"),
                            Name = "User1"
                        });
                });

            modelBuilder.Entity("WebConfigurationControl.Domain.Entities.UserEventNotification", b =>
                {
                    b.Property<Guid>("EventNotificationId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsViewed")
                        .HasColumnType("INTEGER");

                    b.HasKey("EventNotificationId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserEventNotifications");
                });

            modelBuilder.Entity("WebConfigurationControl.Domain.Entities.EventSubscription", b =>
                {
                    b.HasOne("WebConfigurationControl.Domain.Entities.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebConfigurationControl.Domain.Entities.User", "User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebConfigurationControl.Domain.Entities.UserEventNotification", b =>
                {
                    b.HasOne("WebConfigurationControl.Domain.Entities.EventNotification", "EventNotification")
                        .WithMany("UserEventNotifications")
                        .HasForeignKey("EventNotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebConfigurationControl.Domain.Entities.User", "User")
                        .WithMany("UserEventNotifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventNotification");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebConfigurationControl.Domain.Entities.EventNotification", b =>
                {
                    b.Navigation("UserEventNotifications");
                });

            modelBuilder.Entity("WebConfigurationControl.Domain.Entities.User", b =>
                {
                    b.Navigation("Subscriptions");

                    b.Navigation("UserEventNotifications");
                });
#pragma warning restore 612, 618
        }
    }
}
